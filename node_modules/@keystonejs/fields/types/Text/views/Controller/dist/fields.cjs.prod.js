"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _defineProperty = require("@babel/runtime/helpers/defineProperty");

require("@babel/runtime/helpers/objectWithoutProperties"), require("@babel/runtime/helpers/classCallCheck"), 
require("lodash.isequal");

var Controller_dist_fields = require("../../../../../Controller/dist/fields.cjs.prod.js");

function _interopDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}

var _defineProperty__default = _interopDefault(_defineProperty);

class TextController extends Controller_dist_fields.default {
  constructor(...args) {
    super(...args), _defineProperty__default.default(this, "getFilterGraphQL", ({type: type, value: value}) => ({
      ["is_i" === type ? this.path + "_i" : `${this.path}_${type}`]: value
    })), _defineProperty__default.default(this, "getFilterLabel", ({label: label}) => `${this.label} ${label.toLowerCase()}`), 
    _defineProperty__default.default(this, "formatFilter", ({label: label, value: value}) => `${this.getFilterLabel({
      label: label
    })}: "${value}"`), _defineProperty__default.default(this, "getFilterTypes", () => [ {
      type: "contains_i",
      label: "Contains",
      getInitialValue: () => ""
    }, {
      type: "not_contains_i",
      label: "Does not contain",
      getInitialValue: () => ""
    }, {
      type: "is_i",
      label: "Is exactly",
      getInitialValue: () => ""
    }, {
      type: "not_i",
      label: "Is not exactly",
      getInitialValue: () => ""
    }, {
      type: "starts_with_i",
      label: "Starts with",
      getInitialValue: () => ""
    }, {
      type: "not_starts_with_i",
      label: "Does not start with",
      getInitialValue: () => ""
    }, {
      type: "ends_with_i",
      label: "Ends with",
      getInitialValue: () => ""
    }, {
      type: "not_ends_with_i",
      label: "Does not end with",
      getInitialValue: () => ""
    } ]);
  }
}

exports.default = TextController;
