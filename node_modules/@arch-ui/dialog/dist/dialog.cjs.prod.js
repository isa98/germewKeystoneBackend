"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var React = require("react"), reactDom = require("react-dom"), ScrollLock = require("react-scrolllock"), FocusTrap = require("focus-trap-react"), modalUtils = require("@arch-ui/modal-utils"), typography = require("@arch-ui/typography"), _extends = require("@babel/runtime/helpers/extends"), _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties"), core = require("@emotion/core"), styled = require("@emotion/styled"), theme = require("@arch-ui/theme"), colorUtils = require("@arch-ui/color-utils");

function _interopDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}

var React__default = _interopDefault(React), ScrollLock__default = _interopDefault(ScrollLock), FocusTrap__default = _interopDefault(FocusTrap), _extends__default = _interopDefault(_extends), _objectWithoutProperties__default = _interopDefault(_objectWithoutProperties), styled__default = _interopDefault(styled);

const outerGutter = 40, innerGutter = 20, Positioner = styled__default.default.div(({width: width}) => ({
  display: "flex",
  flexDirection: "column",
  left: 0,
  marginLeft: "auto",
  marginRight: "auto",
  maxHeight: "calc(100% - 80px)",
  maxWidth: width,
  position: "fixed",
  right: 0,
  top: 40,
  zIndex: 2
})), Dialog = React.forwardRef((_ref, ref) => {
  let {component: Tag} = _ref, props = _objectWithoutProperties__default.default(_ref, [ "component" ]);
  return core.jsx(Tag, _extends__default.default({
    ref: ref,
    role: "dialog",
    css: {
      backgroundColor: "white",
      borderRadius: 5,
      boxShadow: "0 2px 8px -1px rgba(0,0,0,0.3)",
      display: "flex",
      flex: 1,
      flexDirection: "column",
      maxHeight: "100%"
    }
  }, props));
}), HeadFoot = styled__default.default.div({
  lineHeight: 1,
  margin: "0 20px",
  paddingBottom: 20,
  paddingTop: 20,
  position: "relative",
  zIndex: 1
}), Header = styled__default.default(HeadFoot)({
  boxShadow: "0 2px 0 " + colorUtils.alpha(theme.colors.text, .12)
}), Footer = styled__default.default(HeadFoot)({
  boxShadow: "0 -2px 0 " + colorUtils.alpha(theme.colors.text, .12)
}), Title = styled__default.default.h3({
  fontSize: 18,
  fontWeight: 500,
  margin: 0
}), Body = styled__default.default.div({
  lineHeight: 1.4,
  overflowY: "auto",
  padding: 20
}), ModalDialog = React.memo(({attachTo: attachTo = ("undefined" != typeof document ? document.body : null), children: children, closeOnBlanketClick: closeOnBlanketClick = !1, component: component = "div", footer: footer, heading: heading, initialFocus: initialFocus, onClose: onClose, onKeyDown: onKeyDown, transitionState: transitionState, width: width = 640}) => {
  React.useEffect(() => {
    const handleKeyDown = e => {
      onKeyDown && onKeyDown(e);
    };
    return document.addEventListener("keydown", handleKeyDown, !1), () => {
      document.removeEventListener("keydown", handleKeyDown, !1);
    };
  });
  const dialogTitleId = modalUtils.generateUEID();
  return attachTo ? reactDom.createPortal(React__default.default.createElement(React.Fragment, null, React__default.default.createElement(modalUtils.Blanket, {
    style: modalUtils.fade(transitionState),
    onClick: closeOnBlanketClick ? onClose : void 0,
    isTinted: !0
  }), React__default.default.createElement(Positioner, {
    style: modalUtils.slideUp(transitionState),
    width: width
  }, React__default.default.createElement(FocusTrap__default.default, {
    focusTrapOptions: {
      initialFocus: initialFocus,
      clickOutsideDeactivates: closeOnBlanketClick
    }
  }, React__default.default.createElement(Dialog, {
    component: component,
    "aria-labelledby": dialogTitleId
  }, React__default.default.createElement(typography.A11yText, {
    id: dialogTitleId
  }, heading, " Dialog"), heading ? React__default.default.createElement(Header, null, React__default.default.createElement(Title, null, heading)) : null, React__default.default.createElement(Body, null, children), footer ? React__default.default.createElement(Footer, null, footer) : null))), React__default.default.createElement(ScrollLock__default.default, null)), attachTo) : null;
});

var Dialog$1 = modalUtils.withTransitionState(ModalDialog);

exports.default = Dialog$1;
